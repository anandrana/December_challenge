class Solution:
    def atMostNGivenDigitSet(self, digits: List[str], n: int) -> int:
        l=len(digits)
        temp=list(str(n))
        len_n=len(temp)
        
        # print(temp,len_n)
        
        total=0
        count=1
        
        while(len_n>count):
            total+=l**count
            count+=1
        
        count=0
        flag=0
        for i in range(l):
            if(int(digits[i])<int(temp[0])):
                count+=1
            elif(int(digits[i])==int(temp[0])):
                flag=1
                break
        total+=count*(l**(len_n-1))
        
        if(flag==1):
            # print(total)
            for i in range(1,len_n):
                flag=0
                count=0
                
                for j in range(l):
                    if(int(temp[i]) > int(digits[j])):
                        count+=1
                    elif(int(temp[i]) == int(digits[j])):
                        flag=1
                        break
                total+=count*(l**(len_n-(i+1)))
                if(flag==0):
                    return total
            if(flag==1):
                return total+1
            return total
        
        else:
            return total
        
        
        
            
            
        
