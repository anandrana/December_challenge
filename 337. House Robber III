# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def rob(self, root: TreeNode) -> int:
        
        def fn(node): 
            """Return max money possible of robbing & skipping this house."""
            
            if not node: 
                return 0, 0 # null node (first one indicate robbery taken and second one not taken )
            if node.left is None and node.right is None: 
                return node.val, 0 # leaf node 
            left=fn(node.left)
            right =fn(node.right) # post-order traversal 
            # print(node.val,left,right)
            
            #current node is not taken then 
            cur_not_taken=max(left)+max(right)
            
            #if current_node is taken
            cur_taken=node.val+left[1]+right[1]
            
            return (cur_taken,cur_not_taken)
            
        
        return max(fn(root))        
